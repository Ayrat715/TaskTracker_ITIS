# Generated by Django 5.1.7 on 2025-04-10 14:21

import django.contrib.postgres.fields
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0007_alter_task_author'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='taskcategory',
            options={'ordering': ['weight', 'name'], 'verbose_name': 'Категория задачи', 'verbose_name_plural': 'Категории задач'},
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='auto_assign',
            field=models.BooleanField(default=True, help_text='Разрешить автоматическое назначение этой категории', verbose_name='Автоназначение'),
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Дата создания'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='keywords_vector',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, help_text='Автоматически генерируемый список нормализованных ключевых слов', null=True, size=None, verbose_name='Нормализованные ключевые слова'),
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='min_confidence',
            field=models.FloatField(default=0.65, help_text='Минимальная уверенность для автоматического назначения', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)], verbose_name='Минимальная уверенность'),
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='nlp_metadata',
            field=models.JSONField(blank=True, help_text='\n        Метаданные для классификации:\n        - tfidf_vector: TF-IDF вектор категории\n        - bert_embedding: BERT-эмбеддинг описания категории\n        - sample_count: Количество образцов для обучения\n        - last_trained: Дата последнего обучения\n        ', null=True, verbose_name='NLP-метаданные'),
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='task_count',
            field=models.PositiveIntegerField(default=0, help_text='Автоматически обновляемое количество задач в категории', verbose_name='Количество задач'),
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата обновления'),
        ),
        migrations.AddField(
            model_name='taskcategory',
            name='weight',
            field=models.FloatField(default=1.0, help_text='Коэффициент важности категории для приоритизации', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)], verbose_name='Вес категории'),
        ),
        migrations.AlterField(
            model_name='taskcategory',
            name='description',
            field=models.TextField(blank=True, help_text='Подробное описание категории задач', verbose_name='Описание категории'),
        ),
        migrations.AlterField(
            model_name='taskcategory',
            name='keywords',
            field=models.TextField(blank=True, help_text='Список ключевых слов для категории (через запятую)', verbose_name='Ключевые слова'),
        ),
        migrations.AlterField(
            model_name='taskcategory',
            name='name',
            field=models.CharField(help_text='Короткое название категории (например, "Разработка", "Тестирование")', max_length=255, verbose_name='Название категории'),
        ),
    ]
